Vue.js
前端框架（交互界面、渐进式、数据视图双向绑定）

1》前期要求：安装nodeJs、vue-cli/@vue/cli(新版本-推荐)
2》项目构建：使用 "vue ui" 在web上生成项目；查看目录结构、根据vue语法编写项目；
3》项目调试：npm install 安装依赖；npm run dev 打包测试；
4》项目部署：npm run build 打包项目；将打包的dist文件放到服务器（nginx、tomcat、nodejs等）；
（https://blog.csdn.net/weixin_40302929/article/details/105817369）

####Vue.js####

1》Vue实例：new Vue({})
2》数据绑定： {{}} 语法
3》属性绑定： v-bind: 和 : 语法
4》事件绑定： v-on: 和 @ 语法
5》反向传递： v-model 语法
6》v-指令：v-html、v-if、v-show、v-for


eg：
<body>
    <div id="firstVue">
        <input type="number" v-model.number="my_step" />
        <button v-on:click="clickButton">Add</button>
        <p>{{my_total}}</p>
    </div>
</body>

var myVue = new Vue({
	el:'#firstVue',
	data:{
		my_step: 1,
		my_total: 0
	},
	methods:{
		clickButton:function(){
			this.my_total = this.my_total + this.my_step
		}
	}
})

created:html加载完成之前，执行。执行顺序：父组件-子组件

mounted:html加载完成后执行。执行顺序：子组件-父组件

methods：事件方法执行

watch：watch是去监听一个值的变化，然后执行相对应的函数。

computed：computed是计算属性，也就是依赖其它的属性计算所得出最后的值



####Vue项目调试####
vue+webpack项目调试方法，vue项目难调试，是因为用了webpack。所有代码揉在了一起；
webpack配置提供了devtool这个选项，如果设置为 ‘#source-map’，则可以生成.map文件，在chrome浏览器中调试的时候可以显示源代码。
（https://blog.csdn.net/liyijun4114/article/details/73863228/）

####Vue项目配置####
根目录下package.json文件配置依赖：
	"scripts": {
    "serve": "vue-cli-service serve",
    "serve_dev": "vue-cli-service serve --mode production", // process.env.NODE_ENV为"production"
    "build_dev": "vue-cli-service build --mode development", // process.env.NODE_ENV为"development"
    "build": "vue-cli-service build",
    "lint": "vue-cli-service lint"
	},
根目录下vue.config.js文件进行配置：
	configureWebpack: (config) => {
        if (process.env.NODE_ENV == 'production') {
            // 为生产环境
            config.mode = 'production';
            config.devtool = 'source-map'; // 显示源码
        } else {
            // 为开发环境
            config.mode = 'development';
        }
    }


####项目压缩####
compression-webpack-plugin插件
服务器需要开启gzip




